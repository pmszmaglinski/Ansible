events {}

http {

    include /etc/nginx/conf.d/*.conf;

##################
# Jenkins config #
##################

    upstream jenkins {
      keepalive 32; # keepalive connections
      server jenkins.home.lan:8081; # jenkins ip and port
    }

    # Required for Jenkins websocket agents
    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }

    server {
      #listen          80;       # Listen on port 80 for IPv4 requests
      listen 443 ssl http2;
      server_name     jenkins.home.lan;  # replace 'jenkins.example.com' with your server domain name
      ssl_certificate /certs/home.lan.crt;
      ssl_certificate_key /certs/home.lan.key;

      # this is the jenkins web root directory
      # (mentioned in the /etc/default/jenkins file)
      root            /var/jenkins_home/war/;
      access_log      /var/log/nginx/access.log;
      error_log       /var/log/nginx/error.log;

      # pass through headers from Jenkins that Nginx considers invalid
      ignore_invalid_headers off;
      location ~ "^/static/[0-9a-fA-F]{8}\/(.*)$" {
        # rewrite all static files into requests to the root
        # E.g /static/12345678/css/something.css will become /css/something.css
        rewrite "^/static/[0-9a-fA-F]{8}\/(.*)" /$1 last;
      }

      location /userContent {
        # have nginx handle all the static requests to userContent folder
        # note : This is the $JENKINS_HOME dir
        root /var/jenkins_home/;
        if (!-f $request_filename){
          # this file does not exist, might be a directory or a /**view** url
          rewrite (.*) /$1 last;
          break;
        }
        sendfile on;
      }

      location / {
          sendfile off;
          proxy_pass         http://jenkins;
          proxy_redirect     default;
          proxy_http_version 1.1;

          # Required for Jenkins websocket agents
          proxy_set_header   Connection        $connection_upgrade;
          proxy_set_header   Upgrade           $http_upgrade;

          proxy_set_header   Host              $host;
          proxy_set_header   X-Real-IP         $remote_addr;
          proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Proto $scheme;
          proxy_max_temp_file_size 0;

          #this is the maximum upload size
          client_max_body_size       10m;
          client_body_buffer_size    128k;

          proxy_connect_timeout      90;
          proxy_send_timeout         90;
          proxy_read_timeout         90;
          proxy_buffering            off;
          proxy_request_buffering    off; # Required for HTTP CLI commands
          proxy_set_header Connection ""; # Clear for keepalive
      }
    }

##################
# Rancher config #
##################

    upstream rancher {
        server rancher.home.lan:8080;
    }

    map $http_upgrade $connection_upgrade {
        default Upgrade;
        ''      close;
    }

    server {
        listen 443 ssl http2;
        server_name rancher.home.lan;
        ssl_certificate /certs/home.lan.crt;
        ssl_certificate_key /certs/home.lan.key;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://rancher;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            # This allows the ability for the execute shell window to remain open for up to 15 minutes. Without this parameter, the default is 1 minute and will automatically close.
            proxy_read_timeout 900s;
            proxy_buffering off;
        }
    }

    server {
        listen 80;
        server_name rancher.home.lan;
        return 301 https://$server_name$request_uri;
    }

   server {
        listen 80;
        server_name jenkins.home.lan;
        return 301 https://$server_name$request_uri;
    }
}